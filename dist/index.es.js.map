{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/components/Timeline/Timeline.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n/* css */\nimport './styles.css'\n\nconst Timeline = ({\n  timelines, direction, pivot, textLimit, tooltip,\n}) => {\n  const classTextLimit = textLimit !== 'none' ? 'react-timeline__content--limit' : ''\n  const styleTextLimit = textLimit !== 'none' ? { width: `${textLimit}` } : {}\n  const cssTooltip = tooltip ? 'react-timeline__event--tooltip' : ''\n\n  return (\n    <div className={`react-timeline react-timeline--${pivot} react-timeline--${direction}`}>\n      {\n        timelines.map((item, index) => (\n          <div key={index} className={`react-timeline__event ${cssTooltip}`}>\n            <div className=\"react-timeline__icons\">\n              {tooltip && (\n                <div className=\"react-timeline__tooltip\">\n                  <div className=\"react-timeline__arrow\" />\n                  <span>{item.title}</span>\n                </div>\n              )}\n            </div>\n            <div className={`react-timeline_content ${classTextLimit}`} style={styleTextLimit}>\n              <div className=\"react-timeline__title\"><span>{item.title}</span></div>\n              {item.sub && <div className=\"react-timeline__lead\">{item.sub}</div>}\n            </div>\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nTimeline.propTypes = {\n  /** data */\n  timelines: PropTypes.array.isRequired,\n  /** left | center | right */\n  direction: PropTypes.string,\n  /** vertical | horizontal */\n  pivot: PropTypes.string,\n  /** text limit */\n  textLimit: PropTypes.string,\n  /** tooltip */\n  tooltip: PropTypes.bool,\n}\n\nTimeline.defaultProps = {\n  direction: 'left',\n  pivot: 'vertical',\n  textLimit: 'none',\n  tooltip: false,\n}\n\nexport default Timeline\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Timeline","timelines","direction","pivot","textLimit","tooltip","classTextLimit","styleTextLimit","width","cssTooltip","React","className","map","item","index","key","title","sub","defaultProps"],"mappings":"sBAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,isqBCjB9C,IAAMe,EAAW,gBACfC,IAAAA,UAAWC,IAAAA,UAAWC,IAAAA,MAAOC,IAAAA,UAAWC,IAAAA,QAElCC,EAA+B,SAAdF,EAAuB,iCAAmC,GAC3EG,EAA+B,SAAdH,EAAuB,CAAEI,gBAAUJ,IAAgB,GACpEK,EAAaJ,EAAU,iCAAmC,UAG9DK,uBAAKC,mDAA6CR,8BAAyBD,IAEvED,EAAUW,KAAI,SAACC,EAAMC,UACnBJ,uBAAKK,IAAKD,EAAOH,0CAAoCF,IACnDC,uBAAKC,UAAU,yBACZN,GACCK,uBAAKC,UAAU,2BACbD,uBAAKC,UAAU,0BACfD,4BAAOG,EAAKG,SAIlBN,uBAAKC,2CAAqCL,GAAkBf,MAAOgB,GACjEG,uBAAKC,UAAU,yBAAwBD,4BAAOG,EAAKG,QAClDH,EAAKI,KAAOP,uBAAKC,UAAU,wBAAwBE,EAAKI,YAsBvEjB,EAASkB,aAAe,CACtBhB,UAAW,OACXC,MAAO,WACPC,UAAW,OACXC,SAAS"}